# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

# Load system's bashrc
if [ -f /etc/bashrc ]; then
  source /etc/bashrc
fi

# Prompt color
# `dircolors` prints out `LS_COLORS='...'; export LS_COLORS`, so eval'ing
# $(dircolors) effectively sets the LS_COLORS environment variable.
# http://unix.stackexchange.com/questions/94299/dircolors-modify-color-settings-globaly
if [ -f "/etc/DIR_COLORS" ]; then
  eval "$(dircolors /etc/DIR_COLORS)"
fi
if [ -f "${HOME}/.dir_colors" ]; then
  eval "$(dircolors ${HOME}/.dir_colors)"
fi

# Command prompt
###PS1="\[\033]0;$MSYSTEM:\w\007 \033[32m\]\u@\h \[\033[33m\w$(__git_ps1)\033[0m\] $"
###PS1="\[\033]0;$MSYSTEM:\w\007\033[32m\]\e[0;36m[\T][\u@\h]\e[m \[\033[33m\w \033[0m\] \n$ "
###PS1="\[\033[36m\][\$(date +%H:%M:%S)] \[\033[32m\][\w]$ \[\033[0m\]"
###PS1="\[\033[36m\][\$(date +%H:%M:%S)]\[\033[32m\] \w $ \[\033[0m\]"
###PS1="\[\033[36m\][\T]\[\033[32m\] \w $ \[\033[0m\]"
###PS1="\[\033[1;36m\][\T]@\u\[\033[32m\] \w $ \[\033[0m\]"
PS1="\[\e[1;32m\]\H\[\e[0m\] :: \[\e[1;30m\]\d\[\e[0m\] \t :: \[\e[1;33m\]\w\n\[\e[1;34m\]\u $ \[\033[0m\]"

# Undo escaping $ in a bash4+
# * http://askubuntu.com/questions/70750/how-to-get-bash-to-stop-escaping-during-tab-completion
# * https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html
shopt -s direxpand

# Make bash append rather than overwrite the history on disk
shopt -s histappend

# Don't use ^D to exit shell
set -o ignoreeof

# Disable beep
CMDTEMP=$(command -v setterm)
if [ "${CMDTEMP}" != "" ]; then
  setterm -blength 0
fi;


# Prompt History Options
# Don't put duplicate lines in the history.
# export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
#
# Ignore some controlling instructions
# HISTIGNORE is a colon-delimited list of patterns which should be excluded.
# The '&' is a special pattern which suppresses duplicate entries.
# export HISTIGNORE=$'[ \t]*:&:[fb]g:exit'
export HISTIGNORE=$'[ \t]*:&:[fb]g:exit:ls:ll' # Ignore the ls command as well
export HISTCONTROL=ignoredups
export HISTSIZE=10000
export HISTFILESIZE=1000000
export HISTTIMEFORMAT="%m/%d/%y %T "

# locale -uU
export LANG="en_US.UTF-8"

#################
## Cygwin only
#################
# Use d2u to convert a binary text file to ascii text file
# $ d2u hello.cpp

# Cygwin, allow /c/drive/path or /d/drive/path
# http://tldp.org/LDP/abs/html/internalvariables.html
export CDPATH="/cygdrive"

# Open the given path in explorer
alias myexplorer='explorer $(cygpath -w "$(pwd)") &'


##############################
# Common alias
##############################
# List files
alias lsv='ls --color=auto --format=vertical'
alias ls='ls --color=auto'
alias ll='ls -l'
alias lla='ls -al'
alias la='ls -A'
# Grep
alias tailfile='tail -n +1'     # tail a file with filename header
alias grep='grep --color=auto'       # show differences in colour
alias egrep='egrep --color=auto'     # show differences in colour
alias fgrep='fgrep --color=auto'     # show differences in colour
alias less='less -r'     # raw control characters
# File operation
alias cp='cp -i'
alias rm='rm -i'
alias mv='mv -i'

alias beep='echo -en "\a" > /dev/tty5'  # Create a beep sound
alias df='df -h'
alias du='du -h'
alias sudo='sudo '      # Make sudo normal -- http://serverfault.com/questions/203988/why-do-i-not-have-syntax-highlighting-when-i-sudo-vi-filename
alias vi='vim'

# Directory memory:  pushd/popd/dirs
alias dirs='dirs -v'
function goto() { cd "${DIRSTACK[$@]}"; }


##############################
# Common function
##############################
function _my_source()
{
  local MYFILE=$1
  if [ -f "${MYFILE}" ]; then
    source "${MYFILE}"
  else
    echo "File not found: ${MYFILE}"
  fi
}

function addToPATH()
{
  case ":$PATH:" in
    *":$1:"*) :;; # already there
    *) PATH="$1:$PATH";; # or PATH="$PATH:$1"
  esac
}
